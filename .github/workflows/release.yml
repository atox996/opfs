name: Release

on:
  push:
    branches:
      - beta
      - alpha
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to release"
        required: true
        default: "main"
        type: choice
        options:
          - main
      release_type:
        description: "Type of release (patch/minor/major). Default is 'patch'."
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      pull-requests: read
      issues: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org/"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: "latest"
          run_install: false

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-
            pnpm-

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .pnpm
          key: node-modules-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            node-modules-${{ runner.os }}-
            node-modules-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Build project
        run: pnpm build

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PAT }}
          # https://github.com/semantic-release/semantic-release/issues/1903
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |

          echo "GITHUB_REF: $GITHUB_REF_NAME"

          if [[ "$GITHUB_EVENT_NAME" == "workflow_dispatch" ]]; then
            RELEASE_TYPE="${{ github.event.inputs.release_type || 'patch' }}"
            echo "Manual release triggered with type: $RELEASE_TYPE"
            npx semantic-release --release-as $RELEASE_TYPE --branches $GITHUB_REF_NAME
          elif [[ "$GITHUB_REF" == refs/tags/* ]]; then
            echo "Tag-based release detected: $GITHUB_REF_NAME"
            npx semantic-release --no-ci
          else
            echo "Automatic branch-based release triggered"
            npx semantic-release --release-as patch
          fi
